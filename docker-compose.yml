version: '3.9'
services:
  app:
    build:
      context: .
    command: [ "/wait-for-it.sh", "db", "/entrypoint.sh" ]
    ports:
      - 8000
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    depends_on:
      - db
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=123@456
    networks:
      - backend
  db:
    image: postgres:16-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5433:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=123@456
    networks:
      - backend

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    networks:
      - backend

volumes:
  static_volume:
  postgres-data:

networks:
  backend:
    driver: bridge